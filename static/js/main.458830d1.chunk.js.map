{"version":3,"sources":["ColorThemes/ColorThemes.js","Hooks/useLocalStorage.js","components/ThemeProvider/ThemeProvider.js","Page/GameOptions/GameOptionsStyle.js","components/GameContainer/GameContainerStyle.js","components/GameContainer/GameContainer.js","components/ThemeButton/ThemeButtonStyle.js","components/ThemeButton/ThemeButton.js","components/GameOption/GameOptionStyle.js","Redux/settingsSlice.js","components/GameOption/GameOption.js","Redux/gameSlice.js","Page/GameOptions/GameOptions.js","Page/Leaderboard/LeadboardStyle.js","components/TopResults/TopResultsStyle.js","Hooks/useDoubleDigit.js","components/TopResults/Result.js","components/TopResults/TopResults.js","components/SortOption/SortOption.js","axiosInstance.js","Redux/leadboardDataSlice.js","components/NewGameButton/NewGameButtonStyle.js","components/NewGameButton/NewGameButton.js","Page/Leaderboard/Leaderboard.js","Page/Game/GameStyle.js","components/GameSummary/GameSummaryStyle.js","components/GameSummary/SummaryItem.js","components/GameSummary/GameSummary.js","components/Navigation/NavigationStyle.js","components/Navigation/Navigation.js","components/GameScore/GameScoreStyle.js","components/GameScore/GameScoreItem/GameScoreItem.js","components/GameScore/GameScore.js","components/GridItem/GridItemStyle.js","components/GridItem/GridItem.js","Hooks/useIcons.js","Page/Game/Game.js","App.js","CssReset/CssReset.js","Redux/Redux.js","reportWebVitals.js","index.js"],"names":["darkTheme","name","success","inactive","active","bgOptions","bgGame","fontColor","lightTheme","useLocalStorage","key","initialValue","useState","item","window","localStorage","getItem","JSON","parse","error","console","log","storedValue","setStoredValue","value","valueToStore","Function","setItem","stringify","ThemeContext","createContext","ThemeProvider","children","storagedTheme","theme","setTheme","useEffect","Provider","changeTheme","OptionsContainer","styled","motion","div","RowTitle","h2","Button","Link","props","$theme","AbsoluteThemeButton","GameOptionsRow","MainContainer","$justify","$SVG","css","fillSVG","$themeContext","GameContainer","variants","initial","animate","themeContext","useContext","slice","ThemeButton","button","setStoragedTheme","themeAnimation","hidden","opacity","y","visible","exit","onClick","AnimatePresence","exitBeforeEnter","whileHover","scale","color","Input","input","gameSettingsSlice","createSlice","initialState","gameTheme","gridSize","arrayOfNumbers","reducers","setGameTheme","state","action","payload","setGameGridSize","setArrayOfNumbers","showSettings","current","setNewGame","amountOfEqualElements","i","push","shuffledArrayOfNumbers","arr","newArr","length","rand","Math","floor","random","getShuffledArr","actions","GameOption","option","checked","dispatch","useDispatch","style","display","justifyContent","role","defaultChecked","type","userGuesses","arrayOfGuesses","successGuesses","addElementToGuesses","clearArrayOfGuesses","addToSuccessGuesses","prepareNewGame","GameOptions","useSelector","gameSettings","x","start","transition","delay","when","staggerChildren","to","LeadboardContainer","SortOptionsParent","ScoreLeadboardTitle","h1","TopResultsContainer","ResultContainer","Rank","p","ResultsLegend","span","useDoubleDigit","Result","rank","sortedGridSize","minutes","seconds","doubleDigitSeconds","storaged4GridScore","storaged6GridScore","storagedScore","score","map","LocalUserScore","index","movesCounter","TopResults","results","sortedScore","leadboardData","grid4Moves","grid6Moves","grid4Time","grid6Time","SortOption","label","option1","option2","setValue","radioStyle","FormControl","component","FormLabel","fontSize","fontFamily","fontWeight","RadioGroup","row","onChange","e","target","FormControlLabel","control","Radio","axiosInstance","axios","create","baseURL","fetchMovesScore","createAsyncThunk","fetchedGridSize","a","get","response","data","fetchedMoves","Object","values","sort","b","fetchedMovesWithoutDuplication","Set","fetchTimeScore","fetchedTime","sortedFetchedTime","fetchedTimeWithoutDuplication","Array","from","extraReducers","fulfilled","meta","arg","rejected","NewGameButton","Leaderboard","lastPlayedGridSize","setSortedGridSize","setSortedScore","GridContainer","$gridSize","nav","Background","SummaryContainer","Title","h3","Description","ResultParent","ResultTitle","SetupNewGameButton","RankingButton","SummaryItem","title","doubleDigitSecond","GameSummary","time","duration","focusTrapOptions","initialFocus","height","Logo","Navigation","AbsoluteThemeButtonContainer","ScoresParent","ScoreContainer","Value","GameScoreItem","GameScore","rotateIn","keyframes","rotateOut","ButtonHidden","ButtonPending","bg","ButtonSuccess","GridItem","movesHandler","isGameStarted","startGame","IsDisabled","setIsDisabled","isClicked","setIsClicked","listOfIcons","makeAGuess","setTimeout","ButtonToDisplay","buttonToDisplay","S","includes","React","createElement","disabled","chooseButtonToDisplay","Game","useStopwatch","autoStart","startTimer","pauseTimer","pause","setStoraged4GridScore","setStoraged6GridScore","isGameFinished","setIsGameFinished","setIsGameStarted","setMovesCounter","storeScoreInDatabase","post","incrementMoves","insertScoreToLocalStorage","Wrapper","App","location","useLocation","path","pathname","CssReset","createGlobalStyle","store","configureStore","reducer","gameSettingsReducer","userGuessesReducer","leadboardDataReducer","middleware","getDefaultMiddleware","serializableCheck","reportWebVitals","onPerfEntry","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.458830d1.chunk.js","sourcesContent":["export const darkTheme = {\r\n    name: 'dark',\r\n    success: '#FDA215',\r\n    inactive: '#BCCED9',\r\n    active: '#31485A',\r\n    bgOptions: '#333',\r\n    bgGame: '#EEF1EF',\r\n    fontColor: '#fff'\r\n\r\n}\r\nexport const lightTheme = {\r\n    name: 'light',\r\n    success: '#D0FCB3',\r\n    inactive: '#EAC5D8',\r\n    active: '#E78F8E',\r\n    bgOptions: '#E7EBC5',\r\n    bgGame: '#FEFBF3',\r\n    fontColor: '#41393E'\r\n}","import { useState } from \"react\";\r\n\r\nfunction useLocalStorage(key, initialValue) {\r\n\r\n    const [storedValue, setStoredValue] = useState(() => {\r\n        try {\r\n            const item = window.localStorage.getItem(key);\r\n            return item ? JSON.parse(item) : initialValue;\r\n        } catch (error) {\r\n            console.log(error);\r\n            return initialValue;\r\n        }\r\n    });\r\n\r\n    const setValue = (value) => {\r\n        try {\r\n            const valueToStore = value instanceof Function ? value(storedValue) : value;\r\n            setStoredValue(valueToStore)\r\n            window.localStorage.setItem(key, JSON.stringify(valueToStore));\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n    return [storedValue, setValue];\r\n}\r\n\r\nexport default useLocalStorage","import { darkTheme, lightTheme } from \"../../ColorThemes/ColorThemes\"\r\nimport { createContext, useState, useEffect } from \"react\"\r\nimport useLocalStorage from \"../../Hooks/useLocalStorage\"\r\nexport const ThemeContext = createContext()\r\n\r\nconst ThemeProvider = ({ children }) => {\r\n\r\n    const [storagedTheme] = useLocalStorage('theme')\r\n    const [theme, setTheme] = useState(darkTheme)\r\n\r\n    useEffect(() => {\r\n        storagedTheme ? setTheme(storagedTheme) : setTheme(darkTheme)\r\n    }, [])\r\n\r\n    const changeTheme = () => {\r\n        theme.name === 'light' ? setTheme(darkTheme) : setTheme(lightTheme)\r\n    }\r\n\r\n    return (\r\n        <ThemeContext.Provider value={{ theme, changeTheme }} >\r\n            {children}\r\n        </ThemeContext.Provider>\r\n    )\r\n}\r\n\r\nexport default ThemeProvider","import styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { motion } from \"framer-motion\"\r\nexport const OptionsContainer = styled(motion.div)`\r\n  background: white;\r\n  padding: 2rem;\r\n  border-radius: 15px;\r\n  overflow:hidden;\r\n  @media (min-width: 576px) {\r\n    padding: 4rem;\r\n  }\r\n\r\n  @media(min-width:768px){\r\n    padding: 5rem;\r\n  }\r\n`;\r\nexport const RowTitle = styled(motion.h2)`\r\nmargin: 2rem 0;\r\nfont-weight:600;\r\n`;\r\nexport const Button = styled(motion(Link))`\r\n  display: block;\r\n  margin: 2rem 0;\r\n  padding: 0.5rem 1rem;\r\n  text-align: center;\r\n  border-radius: 25px;\r\n  font-weight:bold;\r\n  cursor: pointer;\r\n  text-decoration: none;\r\n  background: ${(props) => props.$theme.success};\r\n  color: ${(props) => props.$theme.fontColor};\r\n  transition:box-shadow .3s;\r\n    :hover,:focus{\r\n      box-shadow: ${(props) => props.$theme.success} 0px 10px 36px 0px, ${(props) => props.$theme.success} 0px 0px 0px 1px;\r\n    }\r\n  @media(min-width:768px){\r\n    padding:1rem 2rem;\r\n  }\r\n`;\r\nexport const AbsoluteThemeButton = styled.div`\r\nposition:absolute;\r\ntop:10%;\r\nright:10%;\r\n`\r\nexport const GameOptionsRow = styled(motion.div)`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 2rem;\r\n\r\n  label {\r\n    width: 100%;\r\n  }\r\n\r\n  @media (min-width: 768px) {\r\n   gap:4rem;\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { motion } from \"framer-motion\";\r\nimport { css } from \"styled-components\";\r\n\r\nexport const MainContainer = styled(motion.div)`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: ${(props) => props.$justify || \"center\"};\r\n  min-height: 100vh;\r\n  transition: background-image 1s;\r\n\r\n  ${(props) => props.$SVG ?\r\n            css`\r\n          background: #333;\r\n          background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='400' height='400' viewBox='0 0 800 800'%3E%3Cg fill='none' stroke='%23000000' stroke-width='1'%3E%3Cpath d='M769 229L1037 260.9M927 880L731 737 520 660 309 538 40 599 295 764 126.5 879.5 40 599-197 493 102 382-31 229 126.5 79.5-69-63'/%3E%3Cpath d='M-31 229L237 261 390 382 603 493 308.5 537.5 101.5 381.5M370 905L295 764'/%3E%3Cpath d='M520 660L578 842 731 737 840 599 603 493 520 660 295 764 309 538 390 382 539 269 769 229 577.5 41.5 370 105 295 -36 126.5 79.5 237 261 102 382 40 599 -69 737 127 880'/%3E%3Cpath d='M520-140L578.5 42.5 731-63M603 493L539 269 237 261 370 105M902 382L539 269M390 382L102 382'/%3E%3Cpath d='M-222 42L126.5 79.5 370 105 539 269 577.5 41.5 927 80 769 229 902 382 603 493 731 737M295-36L577.5 41.5M578 842L295 764M40-201L127 80M102 382L-261 269'/%3E%3C/g%3E%3Cg fill='%23${(props) => props.fillSVG}'%3E%3Ccircle cx='769' cy='229' r='5'/%3E%3Ccircle cx='539' cy='269' r='5'/%3E%3Ccircle cx='603' cy='493' r='5'/%3E%3Ccircle cx='731' cy='737' r='5'/%3E%3Ccircle cx='520' cy='660' r='5'/%3E%3Ccircle cx='309' cy='538' r='5'/%3E%3Ccircle cx='295' cy='764' r='5'/%3E%3Ccircle cx='40' cy='599' r='5'/%3E%3Ccircle cx='102' cy='382' r='5'/%3E%3Ccircle cx='127' cy='80' r='5'/%3E%3Ccircle cx='370' cy='105' r='5'/%3E%3Ccircle cx='578' cy='42' r='5'/%3E%3Ccircle cx='237' cy='261' r='5'/%3E%3Ccircle cx='390' cy='382' r='5'/%3E%3C/g%3E%3C/svg%3E\");\r\n          /* background by SVGBackgrounds.com */\r\n        `\r\n            :\r\n            css`\r\n          background: ${(props) => props.$themeContext.bgGame};\r\n        `}\r\n`;\r\n","import * as S from './GameContainerStyle'\r\nimport PropTypes from 'prop-types'\r\nimport { ThemeContext } from '../ThemeProvider/ThemeProvider'\r\nimport { useContext } from 'react'\r\n\r\nexport const GameContainer = ({ $justify, $SVG, children, variants, initial, animate }) => {\r\n    const themeContext = useContext(ThemeContext)\r\n    const fillSVG = themeContext.theme.success.slice(1)//removing # from color to use it in StyledComponent\r\n\r\n    return (\r\n        <S.MainContainer\r\n            $SVG={$SVG}\r\n            variants={variants}\r\n            initial={initial}\r\n            animate={animate}\r\n            $justify={$justify}\r\n            $themeContext={themeContext.theme}\r\n            fillSVG={fillSVG} >\r\n            {children}\r\n        </S.MainContainer>\r\n\r\n    )\r\n}\r\nGameContainer.propTypes = {\r\n    $justify: PropTypes.oneOf(['flex-start', 'flex-end', 'center']),\r\n    $bg: PropTypes.string\r\n}\r\nexport default GameContainer\r\n","import styled from \"styled-components\";\r\nimport { motion } from \"framer-motion\";\r\n\r\nexport const ThemeButton = styled.button`\r\ncursor:pointer;\r\nborder:none;\r\nbackground:none;\r\nfont-size:2rem;\r\n`\r\n","import * as S from './ThemeButtonStyle'\r\nimport { darkTheme, lightTheme } from '../../ColorThemes/ColorThemes'\r\nimport { ThemeContext } from '../ThemeProvider/ThemeProvider'\r\nimport { MdNightsStay as MoonIcon, MdWbSunny as SunIcon } from 'react-icons/md'\r\nimport { AnimatePresence, motion } from 'framer-motion'\r\nimport { useContext } from 'react'\r\nimport useLocalStorage from '../../Hooks/useLocalStorage'\r\n\r\nconst ThemeButton = () => {\r\n\r\n    const themeContext = useContext(ThemeContext)\r\n    const [, setStoragedTheme] = useLocalStorage('theme')\r\n\r\n    const toogleTheme = () => {\r\n        themeContext.theme.name === 'dark' ? setStoragedTheme(lightTheme) : setStoragedTheme(darkTheme)\r\n        themeContext.changeTheme()\r\n    }\r\n    const themeAnimation = {\r\n        hidden: { opacity: 0, y: '3vh' },\r\n        visible: { opacity: 1, y: '0' },\r\n        exit: { opacity: 0, y: '-3vh' }\r\n    }\r\n    return (\r\n        <S.ThemeButton onClick={toogleTheme} aria-label='toogle color theme' >\r\n            <AnimatePresence exitBeforeEnter>\r\n                {themeContext.theme.name === 'dark' ?\r\n                    <motion.div key=\"sun\" variants={themeAnimation} whileHover={{ scale: 1.2 }} animate='visible' initial='hidden' exit='exit'>\r\n                        <SunIcon color='#FFD700' />\r\n                    </motion.div>\r\n                    :\r\n                    <motion.div key=\"moon\" variants={themeAnimation} whileHover={{ scale: 1.2 }} animate='visible' initial='hidden' exit='exit'>\r\n                        <MoonIcon color='#000' />\r\n                    </motion.div>\r\n                }\r\n            </AnimatePresence>\r\n\r\n        </S.ThemeButton>\r\n    )\r\n}\r\n\r\nexport default ThemeButton\r\n","import styled from \"styled-components\";\r\n\r\nexport const Input = styled.input`\r\n  display: none;\r\n\r\n  :not(:checked):hover + span {\r\n    box-shadow: ${(props) => props.$themeContext.active} 0px 10px 36px 0px;\r\n    color: ${(props) => props.$themeContext.active};\r\n  }\r\n  :checked + span {\r\n    background-color: ${(props) => props.$themeContext.active};\r\n  }\r\n  + span {\r\n    display: inline-block;\r\n    text-align: center;\r\n    padding: 0.5rem 1rem;\r\n    font-weight: bold;\r\n    cursor: pointer;\r\n    border-radius: 25px;\r\n    color: ${(props) => props.$themeContext.fontColor};\r\n    background-color: ${(props) => props.$themeContext.inactive};\r\n    transition: box-shadow .3s, color .3s;\r\n\r\n    @media (min-width: 768px) {\r\n      padding: 1rem 2rem;\r\n    }\r\n  }\r\n`;\r\n","import { createSlice, current } from '@reduxjs/toolkit'\r\n\r\nconst initialState = {\r\n    gameTheme: 'Numbers',\r\n    gridSize: 4,\r\n    arrayOfNumbers: []\r\n}\r\n\r\nexport const gameSettingsSlice = createSlice({\r\n    name: 'gameSettings',\r\n    initialState,\r\n    reducers: {\r\n        setGameTheme: (state, action) => {\r\n            state.gameTheme = action.payload\r\n        },\r\n        setGameGridSize: (state, action) => {\r\n            state.gridSize = action.payload\r\n        },\r\n        setArrayOfNumbers: (state, action) => {\r\n            state.arrayOfNumbers = action.payload\r\n        },\r\n        showSettings: (state) => {\r\n            console.log(current(state))\r\n        },\r\n        setNewGame(state, action) {\r\n            const arrayOfNumbers = []\r\n            const amountOfElements = action.payload * action.payload\r\n            const amountOfEqualElements = amountOfElements / 2\r\n            for (let i = 0; i < amountOfEqualElements; i++) {\r\n                arrayOfNumbers.push(i)\r\n                arrayOfNumbers.push(i)\r\n            }\r\n            \r\n    //function that randomize position of elements in array\r\n            const getShuffledArr = arr => {\r\n                const newArr = arr.slice()\r\n                for (let i = newArr.length - 1; i > 0; i--) {\r\n                    const rand = Math.floor(Math.random() * (i + 1));\r\n                    [newArr[i], newArr[rand]] = [newArr[rand], newArr[i]];\r\n                }\r\n                return newArr\r\n            };\r\n            \r\n            const shuffledArrayOfNumbers = getShuffledArr(arrayOfNumbers)\r\n            state.arrayOfNumbers = shuffledArrayOfNumbers\r\n        }\r\n\r\n    }\r\n\r\n})\r\n\r\n\r\nexport const { setGameTheme, setNewGame, setGameGridSize, setArrayOfNumbers, showSettings } = gameSettingsSlice.actions\r\nexport default gameSettingsSlice.reducer","import * as S from './GameOptionStyle'\r\nimport PropTypes from 'prop-types'\r\nimport { setGameGridSize, setGameTheme } from '../../Redux/settingsSlice'\r\nimport { ThemeContext } from '../ThemeProvider/ThemeProvider'\r\nimport { useDispatch } from 'react-redux'\r\nimport { useContext } from 'react'\r\n\r\nconst GameOption = ({ option, name, checked, value }) => {\r\n    const themeContext = useContext(ThemeContext)\r\n    const dispatch = useDispatch()\r\n\r\n    const updateGameSettings = () => {\r\n        if (name === 'theme') dispatch(setGameTheme(value))\r\n        if (name === 'size') dispatch(setGameGridSize(value))\r\n    }\r\n\r\n    return (\r\n        <label style={{ display: 'flex', justifyContent: 'space-around' }}>\r\n            <S.Input\r\n                role='radiogroup'\r\n                defaultChecked={checked}\r\n                type=\"radio\"\r\n                value={value}\r\n                onClick={updateGameSettings}\r\n                name={name}\r\n                $themeContext={themeContext.theme}\r\n            >\r\n            </S.Input>\r\n            <span>{option}</span>\r\n        </label>\r\n\r\n    )\r\n}\r\n\r\nGameOption.propTypes = {\r\n    value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\r\n    option: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    checked: PropTypes.bool,\r\n}\r\nexport default GameOption","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst initialState = {\r\n    arrayOfGuesses: [],\r\n    successGuesses: []\r\n}\r\n\r\nexport const userGuesses = createSlice({\r\n    name: 'userGuesses',\r\n    initialState,\r\n    reducers: {\r\n        addElementToGuesses: (state, action) => {\r\n            state.arrayOfGuesses.push(action.payload)\r\n        },\r\n        clearArrayOfGuesses(state) {\r\n            state.arrayOfGuesses = []\r\n        },\r\n        addToSuccessGuesses(state, action) {\r\n            state.successGuesses.push(action.payload)\r\n        },\r\n        prepareNewGame(state) {\r\n            state.successGuesses = []\r\n            state.arrayOfGuesses = []\r\n        },\r\n\r\n\r\n    }\r\n\r\n})\r\n\r\n\r\nexport const { addElementToGuesses, clearArrayOfGuesses, addToSuccessGuesses, prepareNewGame } = userGuesses.actions\r\nexport default userGuesses.reducer","import * as S from './GameOptionsStyle'\r\nimport GameContainer from '../../components/GameContainer/GameContainer'\r\nimport ThemeButton from '../../components/ThemeButton/ThemeButton'\r\nimport GameOption from \"../../components/GameOption/GameOption\"\r\nimport { ThemeContext } from \"../../components/ThemeProvider/ThemeProvider\"\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { setNewGame } from '../../Redux/settingsSlice'\r\nimport { prepareNewGame } from '../../Redux/gameSlice'\r\nimport { useContext } from \"react\"\r\n\r\nconst GameOptions = () => {\r\n    const { gridSize, gameTheme } = useSelector(state => state.gameSettings)\r\n    const themeContext = useContext(ThemeContext)\r\n    const dispatch = useDispatch()\r\n\r\n    const startNewGame = () => {\r\n        dispatch(prepareNewGame())\r\n        dispatch(setNewGame(gridSize))\r\n    }\r\n    const list = {\r\n        hidden: { y: '-100vh', transition: { when: \"afterChildren\", }, },\r\n        visible: { y: 0, transition: { when: \"beforeChildren\", staggerChildren: 0.3, }, },\r\n        exit: { x: '-100vw', }\r\n\r\n    }\r\n    const item = {\r\n        hidden: { x: '-100vw' },\r\n        visible: { x: 0 },\r\n        start: { opacity: 0 },\r\n        button: { opacity: 1, transition: { delay: 2 } }\r\n    }\r\n    return (\r\n        <GameContainer $SVG>\r\n            <S.OptionsContainer variants={list} initial='hidden' animate='visible' exit='exit'>\r\n                <S.AbsoluteThemeButton>\r\n                    <ThemeButton />\r\n                </S.AbsoluteThemeButton>\r\n                <S.RowTitle variants={item} >Select Theme</S.RowTitle>\r\n                <S.GameOptionsRow variants={item}>\r\n                    <GameOption option='Numbers' value='Numbers' name='theme' checked={!!(gameTheme === 'Numbers')} />\r\n                    <GameOption option='Icons' value='Icons' name='theme' checked={!!(gameTheme === 'Icons')} />\r\n                </S.GameOptionsRow>\r\n\r\n                <S.RowTitle variants={item}>Grid Size</S.RowTitle>\r\n                <S.GameOptionsRow variants={item} >\r\n                    <GameOption option='4 x 4' value={4} name='size' checked={!!(gridSize === 4)} />\r\n                    <GameOption option='6 x 6' value={6} name='size' checked={!!(gridSize === 6)} />\r\n\r\n                </S.GameOptionsRow>\r\n\r\n                <S.Button variants={item} initial='start' animate='button' to='/game' onClick={startNewGame} $theme={themeContext.theme}>\r\n                    Start Game\r\n                </S.Button>\r\n\r\n            </S.OptionsContainer>\r\n        </GameContainer>\r\n    )\r\n}\r\n\r\nexport default GameOptions\r\n","import styled from \"styled-components\";\r\n\r\nexport const LeadboardContainer = styled.div`\r\n  margin-top: 4rem;\r\n  padding-bottom:2rem;\r\n  background: white;\r\n  text-align: center;\r\n  border-radius: 5px;\r\n`;\r\n\r\nexport const SortOptionsParent = styled.div`\r\n  padding: 1rem 2rem;\r\n  & > fieldset {\r\n    margin: 0 1rem;\r\n  }\r\n`;\r\n\r\nexport const ScoreLeadboardTitle = styled.h1`\r\n  padding: 2rem 0;\r\n  text-shadow: 2px 4px 2px rgba(150, 150, 150, 0.8);\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const TopResultsContainer = styled.div `\r\n  position: relative;\r\n  padding: 2rem;\r\n  margin: 0 1rem;\r\n  min-height: 48vh;\r\n  background: #fafafa;\r\n  border-top: 3px solid ${(props) => props.$themeContext.success};\r\n  & div:nth-of-type(2n) {\r\n    background: ${(props) => props.$themeContext.inactive};\r\n  }\r\n  & div:first-of-type {\r\n    margin-bottom: 1rem;\r\n  }\r\n`;\r\nexport const ResultContainer = styled.div `\r\n  display: grid;\r\n  grid-template-columns: repeat(5, 1fr);\r\n  font-size: 1.5rem;\r\n  & :first-child {\r\n    grid-column: 2/3;\r\n  }\r\n  & :nth-child(2) {\r\n    grid-column: 4/5;\r\n  }\r\n  & :nth-child(3) {\r\n    color:green;\r\n    grid-column: 5/6;\r\n    place-self: center;\r\n    background-color: white;\r\n    border-radius: 50%;\r\n  }\r\n  & > p {\r\n    font-family: monospace;\r\n  }\r\n`;\r\n\r\nexport const Rank = styled.p `\r\n  transform: scale(0.7);\r\n`;\r\nexport const ResultsLegend = styled.span `\r\n  margin-top: 1rem;\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  gap: 0.3rem;\r\n  text-align: right;\r\n  font-size: 1.2rem;\r\n  font-weight: 600;\r\n`;\r\n","\r\nexport const useDoubleDigit = value => ('0' + value).slice(-2)\r\n\r\n\r\n","import * as S from './TopResultsStyle'\r\nimport { useDoubleDigit } from '../../Hooks/useDoubleDigit'\r\nimport { MdCheckCircle as UserScoreIcon } from 'react-icons/md'\r\nimport useLocalStorage from '../../Hooks/useLocalStorage'\r\nconst Result = ({ value, rank, sortedGridSize }) => {\r\n    const { minutes, seconds } = value\r\n    const doubleDigitSeconds = useDoubleDigit(seconds)\r\n    const [storaged4GridScore] = useLocalStorage('4GridScore')\r\n    const [storaged6GridScore] = useLocalStorage('6GridScore')\r\n\r\n    const storagedScore = sortedGridSize == 4 ? storaged4GridScore : storaged6GridScore\r\n    const score = typeof (value) === 'object' ? `${minutes}:${doubleDigitSeconds}` : value\r\n\r\n    return (\r\n        <S.ResultContainer>\r\n            <S.Rank>{`#${rank}`}</S.Rank>\r\n            <p>{score}</p>\r\n            {storagedScore && storagedScore.map((LocalUserScore, index) => {\r\n                if ((LocalUserScore.movesCounter === value) ||\r\n                    (LocalUserScore.minutes === value.minutes && LocalUserScore.seconds === value.seconds)) {\r\n                    return <UserScoreIcon key={index} />\r\n                }\r\n            })}\r\n\r\n        </S.ResultContainer>\r\n    )\r\n}\r\n\r\nexport default Result\r\n","import * as S from './TopResultsStyle'\r\nimport Result from './Result'\r\nimport { ThemeContext } from '../ThemeProvider/ThemeProvider'\r\nimport { useSelector } from 'react-redux'\r\nimport { useContext } from 'react'\r\nimport { MdCheckCircle as YouserScoreIcon } from 'react-icons/md'\r\n\r\nconst TopResults = ({ sortedGridSize, sortedScore }) => {\r\n    const { grid4Moves, grid6Moves, grid4Time, grid6Time } = useSelector(state => state.leadboardData)\r\n    const themeContext = useContext(ThemeContext)\r\n    \r\n    const scoreFilters = `grid${sortedGridSize}${sortedScore}`\r\n    let results\r\n\r\n    switch (scoreFilters) {\r\n        case 'grid4Time': results = grid4Time\r\n            break;\r\n        case 'grid6Time': results = grid6Time\r\n            break;\r\n        case 'grid4Moves': results = grid4Moves\r\n            break;\r\n        case 'grid6Moves': results = grid6Moves\r\n            break;\r\n    }\r\n\r\n    results = results.slice(0, 10) // display only 10 best results\r\n\r\n    return (\r\n        <S.TopResultsContainer $themeContext={themeContext.theme}>\r\n            <S.ResultContainer>\r\n                <p>Rank</p>\r\n                <p>Score</p>\r\n            </S.ResultContainer>\r\n            {\r\n                results.map((value, index) =>\r\n                    <Result key={index} value={value} rank={index + 1} sortedGridSize={sortedGridSize} />)\r\n            }\r\n            <S.ResultsLegend>\r\n                <YouserScoreIcon style={{ color: 'green' }} />\r\n                <p>- Your score</p>\r\n            </S.ResultsLegend>\r\n        </S.TopResultsContainer>\r\n    )\r\n}\r\n\r\nexport default TopResults\r\n","import FormControlLabel from '@mui/material/FormControlLabel';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport RadioGroup from '@mui/material/RadioGroup';\r\nimport FormLabel from '@mui/material/FormLabel';\r\nimport Radio from '@mui/material/Radio';\r\nimport { ThemeContext } from '../ThemeProvider/ThemeProvider';\r\nimport { useContext } from 'react'\r\n\r\nconst SortOption = ({ label, option1, option2, setValue, value }) => {\r\n    const themeContext = useContext(ThemeContext)\r\n    const radioStyle = { color: `${themeContext.theme.success}` }\r\n    const labelStyle = { fontSize: '1.5rem', color: 'black', fontFamily: 'Gruppo', fontWeight: 'bold' }\r\n\r\n    const handleChange = e => {\r\n        setValue(e.target.value)\r\n    }\r\n    return (\r\n        <FormControl component=\"fieldset\">\r\n            <FormLabel component=\"legend\" style={labelStyle}>{label}</FormLabel>\r\n            <RadioGroup\r\n                row\r\n                aria-label={label}\r\n                name={`controlled-radio-buttons-group-${label}`}\r\n                value={value}\r\n                onChange={handleChange}\r\n            >\r\n                <FormControlLabel\r\n                    value={option1}\r\n                    control={<Radio style={radioStyle} />}\r\n                    label={label === 'Grid Size' ? `${option1}x${option1}` : option1} />\r\n                <FormControlLabel\r\n                    value={option2}\r\n                    control={<Radio style={radioStyle} />}\r\n                    label={label === 'Grid Size' ? `${option2}x${option2}` : option2} />\r\n            </RadioGroup>\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport default SortOption\r\n","import axios from \"axios\";\r\nexport const axiosInstance = axios.create({\r\n    baseURL: 'https://memory-game-5514b-default-rtdb.europe-west1.firebasedatabase.app/',\r\n  });","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\r\nimport { axiosInstance } from '../axiosInstance'\r\nimport { current } from '@reduxjs/toolkit'\r\nconst initialState = {\r\n    grid4Moves: [],\r\n    grid4Time: [],\r\n    grid6Moves: [],\r\n    grid6Time: [],\r\n  \r\n}\r\nexport const fetchMovesScore = createAsyncThunk(\r\n    'leadboardData/fetchMovesScore',\r\n    async (fetchedGridSize) => {\r\n        try {\r\n            const response = await axiosInstance.get(`/${fetchedGridSize}/moves/.json`)\r\n            // //if there is no data in database set value as empty array instead of undefined,otherwise it will throw an error\r\n            response.data = response.data ? response.data : []\r\n            const fetchedMoves = Object.values(response.data).sort((a, b) => a - b)\r\n            const fetchedMovesWithoutDuplication = [... new Set(fetchedMoves)]\r\n            return fetchedMovesWithoutDuplication\r\n        }\r\n        catch (err) { console.log(err.response) }\r\n    }\r\n)\r\nexport const fetchTimeScore = createAsyncThunk(\r\n    'leadboardData/fetchTimeScore',\r\n    async (fetchedGridSize) => {\r\n        try {\r\n            const response = await axiosInstance.get(`/${fetchedGridSize}/time/.json`)\r\n            // //if there is no data in database set value as empty array instead of undefined,otherwise it will throw an error\r\n            response.data = response.data ? response.data : []\r\n            const fetchedTime = Object.values(response.data)\r\n            const sortedFetchedTime = fetchedTime.sort((a, b) =>\r\n                a.minutes - b.minutes || a.seconds - b.seconds\r\n            )\r\n            const fetchedTimeWithoutDuplication = Array.from(new Set(sortedFetchedTime.map(JSON.stringify))).map(JSON.parse)\r\n            return fetchedTimeWithoutDuplication\r\n        }\r\n        catch {\r\n\r\n        }\r\n    }\r\n)\r\nexport const leadboardData = createSlice({\r\n    name: 'leadboardData',\r\n    initialState,\r\n    reducers: {\r\n    \r\n    },\r\n    extraReducers: {\r\n        [fetchMovesScore.fulfilled]: (state, action) => {\r\n            const fetchedGridSize = action.meta.arg\r\n            fetchedGridSize === 4 ?\r\n                state.grid4Moves = action.payload :\r\n                state.grid6Moves = action.payload\r\n        },\r\n        [fetchMovesScore.rejected]: (action) => { console.log(action.payload) },\r\n        [fetchTimeScore.fulfilled]: (state, action) => {\r\n            const fetchedGridSize = action.meta.arg\r\n            fetchedGridSize === 4 ?\r\n                state.grid4Time = action.payload :\r\n                state.grid6Time = action.payload\r\n\r\n        }\r\n    }\r\n\r\n})\r\n\r\n\r\nexport const { } = leadboardData.actions\r\nexport default leadboardData.reducer","import { Link } from 'react-router-dom'\r\nimport styled from 'styled-components'\r\nimport { motion } from 'framer-motion'\r\n\r\nexport const NewGameButton = styled(motion(Link))`\r\ndisplay:inline-block;\r\nwidth:80%;\r\ntext-align:center;\r\npadding:.5rem 1rem;\r\nmargin:0 3rem;\r\nborder-radius:15px;\r\nfont-weight:900;\r\ncolor:${props => props.$themeContext.active};\r\nbackground:${props => props.$themeContext.success};\r\n`","import * as S from './NewGameButtonStyle'\r\nimport { ThemeContext } from \"../ThemeProvider/ThemeProvider\"\r\nimport { useContext } from \"react\"\r\n\r\nconst NewGameButton = () => {\r\n    const themeContext = useContext(ThemeContext)\r\n\r\n    return (\r\n        <S.NewGameButton to='/' $themeContext={themeContext.theme} whileHover={{ scale: 1.1 }}>\r\n            New Game\r\n        </S.NewGameButton>\r\n    )\r\n}\r\n\r\nexport default NewGameButton\r\n","import * as S from './LeadboardStyle'\r\nimport GameContainer from \"../../components/GameContainer/GameContainer\"\r\nimport TopResults from '../../components/TopResults/TopResults'\r\nimport SortOption from '../../components/SortOption/SortOption'\r\nimport { fetchMovesScore, fetchTimeScore } from '../../Redux/leadboardDataSlice'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { useState, useEffect } from \"react\"\r\nimport NewGameButton from '../../components/NewGameButton/NewGameButton'\r\n\r\n\r\n\r\nconst Leaderboard = () => {\r\n    const dispatch = useDispatch()\r\n    const lastPlayedGridSize = useSelector(state => state.gameSettings.gridSize)\r\n    const [sortedGridSize, setSortedGridSize] = useState(lastPlayedGridSize)\r\n    const [sortedScore, setSortedScore] = useState('Time')\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchMovesScore(4))\r\n        dispatch(fetchMovesScore(6))\r\n        dispatch(fetchTimeScore(4))\r\n        dispatch(fetchTimeScore(6))\r\n    }, [])\r\n\r\n    return (\r\n        <GameContainer $SVG $justify='flex-start'>\r\n            <S.LeadboardContainer>\r\n                <S.SortOptionsParent>\r\n                    <SortOption\r\n                        value={sortedGridSize}\r\n                        setValue={setSortedGridSize}\r\n                        label='Grid Size'\r\n                        option1={4}\r\n                        option2={6} />\r\n                    <SortOption\r\n                        value={sortedScore}\r\n                        setValue={setSortedScore}\r\n                        label='Score'\r\n                        option1='Time'\r\n                        option2='Moves' />\r\n                </S.SortOptionsParent>\r\n                <S.ScoreLeadboardTitle>{sortedScore === 'Time' ? 'Fastest Guesees' : 'Most Accurate Guesses'}</S.ScoreLeadboardTitle>\r\n                <TopResults sortedGridSize={sortedGridSize} sortedScore={sortedScore} />\r\n                <NewGameButton />\r\n            </S.LeadboardContainer>\r\n        </GameContainer>\r\n    )\r\n}\r\n\r\nexport default Leaderboard\r\n","import styled from \"styled-components\";\r\n\r\nexport const GridContainer = styled.div`\r\ndisplay:grid;\r\ngrid-template-columns:repeat(${props => props.$gridSize},1fr);\r\ngap:${props => props.$gridSize === 4 ? '1rem' : '.4rem'};\r\nmargin-bottom:${props => props.$gridSize === 4 ? '3rem' : '.5rem'};\r\n\r\n@media(min-width:576px){\r\ngap:${props => props.$gridSize === 4 ? '1.5rem' : '.5rem'};\r\nmargin-bottom:1.5rem;\r\n}\r\n@media(min-width:768px){\r\nmargin-bottom:3rem;\r\n}\r\n\r\n`\r\nexport const Navigation = styled.nav`\r\ndisplay:flex;\r\njustify-content:space-between;\r\n`\r\n\r\n","import styled from 'styled-components'\r\nimport { Link } from 'react-router-dom'\r\nimport { motion } from 'framer-motion'\r\nimport { css } from 'styled-components'\r\n\r\nconst button = css`\r\ndisplay:inline-block;\r\npadding:1rem 2rem;\r\nmargin-bottom:.5rem;\r\nwidth:100%;\r\nfont-weight:bold;\r\nborder-radius:15px;\r\n:hover,:focus{\r\ntransform:scale(1.1);   \r\n}\r\n`\r\nexport const Background = styled(motion.div)`\r\nposition:absolute;\r\ntop:0;\r\nleft:0;\r\nbottom:0;\r\nright:0;\r\nbackground-color:black;\r\nz-index:2;\r\n`\r\nexport const SummaryContainer = styled(motion.div)`\r\nposition:absolute;\r\ntop:20%;\r\nmargin:0 auto;\r\npadding:1rem 2rem;\r\noverflow:hidden;\r\nbackground:white;\r\nborder-radius:15px;\r\ntext-align: center;\r\nz-index:3;\r\n`\r\nexport const Title = styled.h3`\r\nfont-size:2rem; \r\nmargin-bottom:1rem;\r\n`\r\nexport const Description = styled.p`\r\nmargin-bottom:2rem;\r\n`\r\nexport const ResultParent = styled.div`\r\ndisplay:flex;\r\nalign-items:center;\r\njustify-content:space-between;\r\npadding:1rem;\r\nmargin-bottom:1rem;\r\nborder-radius:15px;\r\nbackground:${props => props.$themeContext.bgGame};\r\n`\r\nexport const ResultTitle=styled.p`\r\ntransform:scale(0.9);\r\nfont-weight:900;\r\n`\r\nexport const Result = styled.p`\r\nfont-size:1.3rem;\r\nfont-weight:bold;\r\ncolor:${props => props.$themeContext.active};\r\n`\r\nexport const SetupNewGameButton = styled(Link)`\r\n${button};\r\nmargin-top:1rem;\r\ncolor:${props => props.$themeContext.fontColor};\r\nbackground:${props => props.$themeContext.success};\r\n`\r\nexport const RankingButton = styled(Link)`\r\n${button};\r\ncolor:${props => props.$themeContext.fontColor};\r\nbackground:${props => props.$themeContext.active};\r\n`","import * as S from './GameSummaryStyle'\r\nimport { useDoubleDigit } from '../../Hooks/useDoubleDigit'\r\nexport const SummaryItem = ({ title, value, $themeContext }) => {\r\n    let { minutes, seconds } = value\r\n    const doubleDigitSecond = useDoubleDigit(seconds)\r\n\r\n    return (\r\n        <S.ResultParent $themeContext={$themeContext}>\r\n            <S.ResultTitle>{title}</S.ResultTitle>\r\n            <S.Result $themeContext={$themeContext}>{typeof (value) === 'object' ? `${minutes}:${doubleDigitSecond}` : `${value} Moves`}</S.Result>\r\n        </S.ResultParent>\r\n    )\r\n}\r\n\r\nexport default SummaryItem\r\n","import * as S from './GameSummaryStyle'\r\nimport SummaryItem from './SummaryItem'\r\nimport { ThemeContext } from '../ThemeProvider/ThemeProvider'\r\nimport { useContext } from 'react'\r\nimport FocusTrap from 'focus-trap-react'\r\n\r\nconst GameSummary = ({ movesCounter, time }) => {\r\n\r\n    const themeContext = useContext(ThemeContext)\r\n    const animationBackground = {\r\n        hidden: {\r\n            opacity: 0\r\n        },\r\n        visible: {\r\n            opacity: .5,\r\n            transition: {\r\n                duration: 1\r\n            }\r\n        },\r\n    }\r\n    const animationSummaryContainer = {\r\n        hidden: {\r\n            height: 0,\r\n            opacity: 0\r\n        },\r\n        visible: {\r\n            height: 'auto',\r\n            opacity: 1,\r\n            transition: {\r\n                delay: 1,\r\n                duration: 2,\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <S.Background variants={animationBackground} animate='visible' initial='hidden' />\r\n            <FocusTrap focusTrapOptions={{ initialFocus: false }} >\r\n                <S.SummaryContainer variants={animationSummaryContainer} animate='visible' initial='hidden'>\r\n                    <S.Title>You did it!</S.Title>\r\n                    <S.Description>Game over! Here's how you got on... </S.Description>\r\n                    <SummaryItem title='Time Elapsed' value={time} $themeContext={themeContext.theme} />\r\n                    <SummaryItem title='Moves Taken' value={movesCounter} $themeContext={themeContext.theme} />\r\n                    <S.SetupNewGameButton to='/' $themeContext={themeContext.theme}>Setup New Game</S.SetupNewGameButton>\r\n                    <S.RankingButton to='leaderboard' $themeContext={themeContext.theme}>Leaderboard</S.RankingButton>\r\n                </S.SummaryContainer>\r\n            </FocusTrap>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GameSummary","import styled from \"styled-components\";\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport const Logo = styled(Link)`\r\nposition:relative;\r\nfont-weight:900;\r\nfont-size:2rem;\r\ncolor:black;\r\n&:after{\r\n    position: absolute;\r\n    content:\"\";\r\n    bottom: -.5rem;\r\n    left:-5%;\r\n    right:5%;\r\n    height: 1rem;\r\n    background-image: url('https://s3-us-west-2.amazonaws.com/s.cdpn.io/664131/underline.svg');\r\n    z-index: -1;\r\n    background-repeat: no-repeat;\r\n}\r\n`\r\n\r\nexport const Navigation = styled.nav`\r\ndisplay:flex;\r\nposition:relative;\r\njustify-content:space-between;\r\ngap:2.5rem;\r\nmargin:2rem;\r\n\r\n@media(min-width:567px){\r\n    gap:12rem;\r\n    margin:3rem;\r\n}\r\n@media(min-width:768px){\r\n    gap:20rem;\r\n  \r\n}\r\n`\r\nexport const AbsoluteThemeButtonContainer = styled.div`\r\nposition: absolute;\r\nright:0;\r\n`\r\n\r\n","import * as S from './NavigationStyle'\r\nimport ThemeButton from '../ThemeButton/ThemeButton'\r\nimport { ThemeContext } from '../ThemeProvider/ThemeProvider'\r\nimport { useContext } from 'react'\r\nimport NewGameButton from '../NewGameButton/NewGameButton'\r\n\r\nexport const Navigation = () => {\r\n    const themeContext = useContext(ThemeContext)\r\n\r\n    return (\r\n        <S.Navigation $themeContext={themeContext.theme}>\r\n            <S.Logo to='/' $themeContext={themeContext.theme}>Memory</S.Logo>\r\n            <NewGameButton/>\r\n            <S.AbsoluteThemeButtonContainer>\r\n                <ThemeButton />\r\n            </S.AbsoluteThemeButtonContainer>\r\n        </S.Navigation>\r\n    )\r\n}\r\nexport default Navigation","import styled from 'styled-components'\r\n\r\nexport const ScoresParent = styled.div`\r\ndisplay:flex;\r\nflex-direction:column;\r\njustify-content:space-between;\r\ngap:1rem;\r\n\r\n@media(min-width:576px){\r\n   flex-direction:row;\r\n}\r\n`\r\nexport const ScoreContainer = styled.div`\r\ndisplay:flex;\r\njustify-content:space-between;\r\ngap:4rem;\r\npadding:1rem;\r\nborder-radius:15px;\r\nfont-weight:bold;\r\noverflow:hidden;\r\ncolor:${props => props.$themeContext.inactive};\r\nbackground:${props => props.$themeContext.active};\r\nbox-shadow: ${props => props.$themeContext.active} 0px 20px 30px -10px;\r\n`\r\nexport const Value = styled.div`\r\nfont-size:1rem;\r\nfont-family:monospace;\r\ncolor:${props => props.$themeContext.success};\r\n`","import * as S from \"../GameScoreStyle\";\r\nimport { useDoubleDigit } from \"../../../Hooks/useDoubleDigit\";\r\n\r\nconst GameScoreItem = ({ title, value, $themeContext }) => {\r\n    const { minutes, seconds } = value\r\n    const doubleDigitSecond = useDoubleDigit(seconds)\r\n\r\n    return (\r\n        <S.ScoreContainer $themeContext={$themeContext}>\r\n            <p>{title}</p>\r\n            <S.Value $themeContext={$themeContext}>\r\n                {title === \"Time\" ? `${minutes}:${doubleDigitSecond}` : value}\r\n            </S.Value>\r\n        </S.ScoreContainer>\r\n    );\r\n};\r\nexport default GameScoreItem;\r\n","import * as S from './GameScoreStyle'\r\nimport GameScoreItem from './GameScoreItem/GameScoreItem'\r\n\r\nconst GameScore = ({ movesCounter, time, $themeContext }) => {\r\n    return (\r\n        <S.ScoresParent>\r\n            <GameScoreItem title='Time' value={time} $themeContext={$themeContext} />\r\n            <GameScoreItem title='Moves' value={movesCounter} $themeContext={$themeContext} />\r\n        </S.ScoresParent>\r\n    )\r\n}\r\n\r\nexport default GameScore\r\n","import styled from \"styled-components\";\r\nimport { css } from \"styled-components\";\r\nimport { keyframes } from \"styled-components\";\r\n\r\nconst rotateIn = keyframes`\r\n    0%{ transform:rotateY(180deg);}\r\n    100%{ transform:rotateY(0);}\r\n    `;\r\nconst rotateOut = keyframes`\r\n    0%{transform:rotateY(0);}\r\n    100%{ transform:rotateY(-180deg);}\r\n    `;\r\nconst success = keyframes`\r\n    0%{ transform: scale(1);}\r\n    50%{ transform:scale(1.5);}\r\n    100%{ transform: scale(1);}\r\n    `;\r\nconst button = css`\r\n  display: grid;\r\n  place-items: center;\r\n  padding: 0.5rem;\r\n  font-size: 2rem;\r\n  border: none;\r\n  font-weight: bold;\r\n  border-radius: 50%;\r\n  cursor: pointer;\r\n  color:black;\r\n  user-select: none;\r\n  box-shadow:  ${(props) => props.$themeContext.inactive} 0px 0px 0px 2px;\r\n\r\n  @media (min-width: 576px) {\r\n    padding: 1.5rem;\r\n  }\r\n`;\r\nexport const ButtonHidden = styled.button`\r\n  ${button}\r\n  animation: ${rotateOut} .2s linear forwards;\r\n  background: ${(props) => props.$themeContext.inactive};\r\n  color: ${(props) => props.$themeContext.inactive};\r\n`;\r\nexport const ButtonPending = styled.button`\r\n  ${button}\r\n  cursor:default;\r\n  animation:${rotateIn} .2s linear forwards;\r\n  background: ${(props) => props.$themeContext.success};\r\n  color: ${(props) => props.$themeContext.bg};\r\n`;\r\nexport const ButtonSuccess = styled.button`\r\n  ${button}\r\n  animation:${success} .2s linear forwards;\r\n  background: ${(props) => props.$themeContext.active};\r\n  color: white;\r\n  pointer-events: none;\r\n  z-index:1;\r\n`;","import * as S from './GridItemStyle'\r\nimport { addElementToGuesses } from '../../Redux/gameSlice'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport React, { useState, useEffect } from 'react'\r\nimport { useIcons } from '../../Hooks/useIcons'\r\nexport const GridItem = ({ value, gameTheme, $themeContext, movesHandler, isGameStarted, startGame }) => {\r\n\r\n    const { arrayOfGuesses, successGuesses } = useSelector((state) => state.userGuesses)\r\n    const [IsDisabled, setIsDisabled] = useState(false)\r\n    const [isClicked, setIsClicked] = useState(false)\r\n    const listOfIcons = useIcons()\r\n    const dispatch = useDispatch()\r\n\r\n    const handleMovesCounter = () => movesHandler()\r\n    const makeAGuess = () => {\r\n        if (!isGameStarted) startGame()\r\n        if (!isClicked) { //preventing from clicking couple times same button\r\n            dispatch(addElementToGuesses(value))\r\n            setIsClicked(true)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (arrayOfGuesses.length === 2) {    //User made 2 guesses increment moves counter and check them before letting him continue\r\n            setIsDisabled(true)\r\n            handleMovesCounter()\r\n            if (arrayOfGuesses[0] === arrayOfGuesses[1]) setIsDisabled(false)   //guesses are right keep on guessing\r\n            else {   // guesses are wrong, wait a bit prevent from guessing and hide incorrenct guesses\r\n                setTimeout(() => {\r\n                    setIsClicked(false)\r\n                    setTimeout(() => {\r\n                        setIsDisabled(false)\r\n                    }, 50);\r\n                }, 1000);\r\n            }\r\n        }\r\n    }, [arrayOfGuesses])\r\n\r\n    useEffect(() => {\r\n        return () => {   //Avoiding errors when user make a wrong guess and instantly switch to other page\r\n            setIsClicked(false)\r\n            setIsDisabled(false)\r\n        }\r\n    }, [])\r\n\r\n    const chooseButtonToDisplay = () => {\r\n        let buttonToDisplay = S.ButtonHidden\r\n        if (arrayOfGuesses.includes(value) && isClicked) buttonToDisplay = S.ButtonPending\r\n        if (successGuesses.includes(value)) buttonToDisplay = S.ButtonSuccess\r\n\r\n        return React.createElement(\r\n            buttonToDisplay,\r\n            { disabled: IsDisabled, $themeContext: $themeContext, onClick: makeAGuess, },\r\n            gameTheme === 'Numbers' ? value : listOfIcons[value]\r\n        );\r\n    }\r\n\r\n    const ButtonToDisplay = chooseButtonToDisplay()\r\n\r\n    return (\r\n        <>\r\n            {ButtonToDisplay}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GridItem\r\n","import {\r\n    MdAnchor, MdInvertColors, MdTipsAndUpdates, MdLightMode, MdInsertEmoticon, MdBrush, MdFlashOn, MdFitnessCenter, MdAllInclusive, MdImagesearchRoller, MdPark, MdLocalAirport, MdLocalFireDepartment, MdAir, MdFingerprint, MdFavorite,\r\n    MdLunchDining, MdAcUnit\r\n} from \"react-icons/md\";\r\n\r\n\r\nexport const useIcons = function () {\r\n\r\n    const listOfIcons = [ <MdLocalFireDepartment />,<MdBrush />,\r\n    <MdAcUnit />,<MdLunchDining />,<MdAnchor />, <MdAir />, <MdFavorite />, <MdFingerprint />, <MdInvertColors />, <MdLightMode />, <MdInsertEmoticon />, <MdFlashOn />, <MdTipsAndUpdates />, <MdFitnessCenter />, <MdAllInclusive />, <MdImagesearchRoller />, <MdPark />, <MdLocalAirport />, ]\r\n\r\n\r\n    return listOfIcons\r\n}","import * as S from './GameStyle'\r\nimport GameContainer from '../../components/GameContainer/GameContainer'\r\nimport GameSummary from '../../components/GameSummary/GameSummary'\r\nimport Navigation from '../../components/Navigation/Navigation'\r\nimport GameScore from '../../components/GameScore/GameScore'\r\nimport GridItem from '../../components/GridItem/GridItem'\r\nimport useLocalStorage from '../../Hooks/useLocalStorage'\r\nimport { clearArrayOfGuesses, addToSuccessGuesses } from '../../Redux/gameSlice'\r\nimport { ThemeContext } from '../../components/ThemeProvider/ThemeProvider'\r\nimport { useEffect, useContext, useState } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { axiosInstance } from '../../axiosInstance'\r\nimport { useStopwatch } from 'react-timer-hook'\r\nimport { Redirect } from 'react-router'\r\n\r\nexport const Game = () => {\r\n    const { seconds, minutes, start: startTimer, pause: pauseTimer } = useStopwatch({ autoStart: false })\r\n    const { gameTheme, gridSize, arrayOfNumbers } = useSelector(state => state.gameSettings)\r\n    const { arrayOfGuesses, successGuesses } = useSelector(state => state.userGuesses)\r\n    const [storaged4GridScore, setStoraged4GridScore] = useLocalStorage('4GridScore')\r\n    const [storaged6GridScore, setStoraged6GridScore] = useLocalStorage('6GridScore')\r\n    const [isGameFinished, setIsGameFinished] = useState(true)\r\n    const [isGameStarted, setIsGameStarted] = useState(false)\r\n    const [movesCounter, setMovesCounter] = useState(0)\r\n    const themeContext = useContext(ThemeContext)\r\n    const dispatch = useDispatch()\r\n\r\n    const insertScoreToLocalStorage = (gridSize) => {\r\n        const storagedScore = gridSize === 4 ? storaged4GridScore : storaged6GridScore\r\n        const setStoragedScore = gridSize === 4 ? setStoraged4GridScore : setStoraged6GridScore\r\n        storagedScore ?\r\n            setStoragedScore([...storagedScore, { movesCounter, minutes, seconds }])\r\n            :\r\n            setStoragedScore([{ movesCounter, minutes, seconds }])\r\n    }\r\n\r\n    const storeScoreInDatabase = async () => {\r\n        try {\r\n            await axiosInstance.post(`${gridSize}/moves.json`, movesCounter)\r\n            await axiosInstance.post(`${gridSize}/time.json`, { minutes, seconds })\r\n        }\r\n        catch (err) {\r\n            console.log(err.response)\r\n        }\r\n    }\r\n    const startGame = () => {\r\n        setIsGameStarted(true)\r\n        startTimer()\r\n    }\r\n    const SlideInAnimation = {\r\n        hidden: { x: '100vw' },\r\n        visible: { x: 0, }\r\n    }\r\n\r\n    const incrementMoves = () => setMovesCounter(movesCounter + 1)\r\n\r\n    useEffect(() => {\r\n        if (arrayOfGuesses.length === 2) {\r\n            if (arrayOfGuesses[0] === arrayOfGuesses[1]) {\r\n                dispatch(addToSuccessGuesses(arrayOfGuesses[0]))\r\n                dispatch(clearArrayOfGuesses())\r\n            }\r\n            else {\r\n                setTimeout(() => {\r\n                    dispatch(clearArrayOfGuesses())\r\n                }, 1000);\r\n            }\r\n        }\r\n    }, [arrayOfGuesses])\r\n\r\n    useEffect(() => {\r\n        if (isGameFinished) {\r\n            insertScoreToLocalStorage(gridSize)\r\n            storeScoreInDatabase()\r\n        }\r\n    }, [isGameFinished])\r\n\r\n    useEffect(() => {\r\n        if (successGuesses.length === gridSize * gridSize / 2) {\r\n            pauseTimer()\r\n            setIsGameFinished(true)\r\n        }\r\n    }, [successGuesses])\r\n\r\n    return (\r\n        <GameContainer variants={SlideInAnimation} initial='hidden' animate='visible' $justify='flex-start' >\r\n            <Navigation />\r\n            {arrayOfNumbers.length !== 0 ? (\r\n                <S.GridContainer   $gridSize={gridSize}>\r\n                    {arrayOfNumbers.map((value, index) => (\r\n                        <GridItem\r\n                            key={index}\r\n                            value={value}\r\n                            gameTheme={gameTheme}\r\n                            movesHandler={incrementMoves}\r\n                            isGameStarted={isGameStarted}\r\n                            startGame={startGame}\r\n                            $themeContext={themeContext.theme}\r\n                        >\r\n                        </GridItem>\r\n\r\n                    ))}\r\n                </S.GridContainer>)\r\n                :\r\n                <Redirect to='/' />}\r\n            <GameScore movesCounter={movesCounter} time={{ seconds, minutes }} $themeContext={themeContext.theme} />\r\n            {isGameFinished && <GameSummary  movesCounter={movesCounter} time={{ seconds, minutes }} />}\r\n        </GameContainer>\r\n    )\r\n}\r\nexport default Game\r\n","import GameOptions from './Page/GameOptions/GameOptions'\nimport { Switch, Route } from 'react-router-dom'\nimport { useLocation } from 'react-router-dom'\nimport { AnimatePresence } from 'framer-motion'\nimport React from 'react';\nimport styled from 'styled-components';\nimport Leaderboard from './Page/Leaderboard/Leaderboard';\nimport Game from './Page/Game/Game'\n\nconst Wrapper = styled.div`\nmax-width:100vw;\noverflow:hidden;\n`\n\nfunction App() {\n  const location = useLocation()\n\n  return (\n    <Wrapper>\n      <AnimatePresence exitBeforeEnter>\n        <Switch location={location} key={location.pathname} >\n          <Route path='/leaderboard' component={Leaderboard} />\n          <Route path='/game' component={Game} />\n          <Route path='/' component={GameOptions} />\n        </Switch>\n      </AnimatePresence>\n    </Wrapper>\n  );\n}\n\nexport default App;\n","import { createGlobalStyle } from \"styled-components\";\r\n\r\nconst CssReset=createGlobalStyle`\r\n*{\r\n    padding:0;\r\n    margin:0;\r\n    box-sizing:border-box;\r\n    text-decoration:none;\r\n    \r\n    /* font-family:'Inconsolata', monospace; */\r\n    font-family: 'Gruppo', cursive;\r\n    \r\n}\r\n`\r\nexport default CssReset","import { configureStore } from '@reduxjs/toolkit'\r\nimport gameSettingsReducer from './settingsSlice'\r\nimport userGuessesReducer from './gameSlice'\r\nimport leadboardDataReducer from './leadboardDataSlice'\r\n\r\nexport const store = configureStore({\r\n    reducer: {\r\n        gameSettings: gameSettingsReducer,\r\n        userGuesses: userGuessesReducer,\r\n        leadboardData:leadboardDataReducer\r\n    },\r\n    middleware: (getDefaultMiddleware) => getDefaultMiddleware({\r\n        serializableCheck: false\r\n      })\r\n})","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import ThemeProvider from './components/ThemeProvider/ThemeProvider'\nimport App from './App';\nimport CssReset from './CssReset/CssReset'\nimport { store } from './Redux/Redux'\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux'\nimport ReactDOM from 'react-dom';\nimport React from 'react';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <ThemeProvider>\n        <CssReset />\n        <Router>\n          <App />\n        </Router>\n      </ThemeProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}